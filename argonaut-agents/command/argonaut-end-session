#!/bin/sh
# This code is part of GOsa (https://gosa.gonicus.de)
# Copyright (C) 2005  Cajus Pollmeier
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
set +e

# Include support library and configuration
. /usr/lib/argonaut/argonaut-support.lib
. /etc/argonaut/argonaut-agent.conf

# Calculate progress bar positions, initialize progress
PROGRESS=0
RES=$(xdpyinfo | awk '/dimensions:/ {print $2}')
XPOS=$(( (${RES%%x*} - 490) / 2 ))
YPOS=$(( (${RES##*x} - 65) / 2 ))

# Get informations from LDAP
CLIENTNAME=$(get_hostname_from_display)

# Check for kprogress tool to avoid errors
KPROGRESS=$(v="`command -V kprogress 2> /dev/null`" && echo "/${v#*/} -geometry +$XPOS+$YPOS")
[ -z "$KPROGRESS" ] && KPROGRESS=cat

{
# Startup message, get plugins
show_progress "Logout process started..."

# Finding all plugins to be executed
PLUGINS=`ls -1 /etc/argonaut/plugins/K[0-9]*`

# Before starting any plugins, we calculate the step information
# needed for the progress bar.
STEPS=$(echo $PLUGINS | wc -w)
if [ $STEPS -gt 0 ]; then
	STEP=$(( 10000 / $STEPS ))

	# Loop through plugins and source the code
	CURRENT=0
	for plugin in $PLUGINS; do
		NAME=$(v=`head -1 $plugin`; echo ${v#*:})
		CURRENT=$(( $CURRENT + $STEP ))
		PROGRESS=$(( $CURRENT / 100 ))
		show_progress "$NAME"

		. $plugin &> ~/.argonaut/log/plugins/$(basename $plugin).log
	done
fi

# Switch off kprogress
echo "-1"

} | $KPROGRESS

# Restore error flag
set -e

