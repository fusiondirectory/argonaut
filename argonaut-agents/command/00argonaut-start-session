#!/bin/sh
# This code is part of GOsa (https://gosa.gonicus.de)
# Copyright (C) 2003, 2004, 2005  Cajus Pollmeier
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
set +e

# Include support library and configuration
. /usr/lib/argonaut/argonaut-support.lib
. /etc/argonaut/argonaut-agent.conf

# Make MAC address available everywhere
export MAC

# Calculate progress bar positions, initialize progress
RES=$(xdpyinfo | awk '/dimensions:/ {print $2}')
XPOS=$(( (${RES%%x*} - 490) / 2 ))
YPOS=$(( (${RES##*x} - 65) / 2 ))

# Clear users LDAP cache - for security reasons
#[ -d ~/.argonaut/cache ] && rm -rf ~/.argonaut/cache

# Check for kprogress tool to avoid errors
KPROGRESS=$(v="`command -V kprogress 2> /dev/null`" && echo "/${v#*/} -geometry +$XPOS+$YPOS")
[ -z "$KPROGRESS" ] && KPROGRESS=cat

DEFAULT_BROWSER=${DEFAULT_BROWSER:-mozilla}
BROWSER=$(v="`command -V $DEFAULT_BROWSER 2> /dev/null`" && echo "/${v#*/}")
if [ -z "$BROWSER" ]; then
        echo "Warning: can't find specified default browser!"
fi

# Make sure, that there's only one single session online
# (on this and the other machines)
if [ -n "$KILLAPPS" ]; then
        if [ "$USER" != "root" ]; then
                APPSERVERS=$(ldap_get_appservers)

                # How many APPSERVERS are defined?
                NUM_APPSERVERS=$(echo -n "$APPSERVERS" | sed 's/[^ ]//g' | wc -c)
                if [ "$NUM_APPSERVERS" -gt 1 -a -r $HOME/.ssh/authorized_keys ]; then

                        # Call processes on all terminal servers we can log in
                        for server in $APPSERVERS; do
                                grep -q "${server%%.*}" $HOME/.ssh/authorized_keys
                                [ $? -ne 0 ] && $SSH $server ". /usr/lib/argonaut/argonaut-support.lib; kill_user_processes"
                        done

                else

                        # Just take the local terminal server
                        kill_user_processes

                fi
        fi
fi


{

# Start session
argonaut-start-session

# Fix icon positions
argonaut-arrange-icons

# Switch off kprogress
echo "-1"

} | $KPROGRESS

# Restore error flag
set -e

