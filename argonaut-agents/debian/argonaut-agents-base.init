#!/bin/sh
# Provide argonaut-agents support when called with start.
#
### BEGIN INIT INFO
# Provides:          argonaut-agents
# Required-Start:    $syslog $network
# Required-Stop:     $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Deploy LDAP based settings to client system
# Description:       argonaut-agents are scriptlets that are used to deploy
#                    settings to your local client and provide a framework
#                    to run login scripts, application deployment, etc.
### END INIT INFO
trap '' INT
PATH=/bin:/sbin:/usr/bin:/usr/sbin:$PATH
TEXTDOMAIN=argonaut-agents
TEXTDOMAINDIR=/usr/share/locale
DESC=argonaut-agents
VERBOSE=1

# Wait for gosa-si to be up and running, if we've a thin client...
#if ! touch /etc/issue 2> /dev/null; then
#	for i in $(seq 1 15); do
#	        if [ -s /etc/ldap/ldap-shell.conf ]; then
#	                break
#	        fi
#	        sleep 0.5
#	done
#fi

# Include libraries
. /usr/lib/argonaut/argonaut-support.lib
[ -f /etc/default/argonaut-agents ] && . /etc/default/argonaut-agents

# Only start if marked for starting
[ "$START" -ne 1 ] && exit 0

. /lib/lsb/init-functions


wait_ldap_available(){
	if [ "$1" ]; then
		for i in $(seq 1 $1); do
			[ -f /etc/ldap/ldap.conf ] && return 0
		done
		return 1
	else
		while [ ! -f /etc/ldap/ldap.conf ]; do sleep 0.5; done
	fi
}

start(){
	export LOGDIR=$(sed -n 's/^fai-logpath\s*=\s*\(.*\)\/[^\/]*$/\1/p' /etc/gosa-si/client.conf)

	# Show dialog and update progress in a new VT
	if [ $VERBOSE -eq 0 ]; then
		NEW_VT=$(openvt -v 2>&1 -- sh -c "
				export TERM=linux ;
				export TERM_UTF8=yes ;
				export FAI_LOG_PATH=$LOGDIR/fai.log ;
				export LANG=de_DE.UTF-8 ;

				if [ -c /dev/fb0 ]; then
				export DEBIAN_FRONTEND=gtk ;
				else
				export DEBIAN_FRONTEND=newt ;
				fi ;

				echo -ne '\033%G' ;

				setterm -blank 0 -powersave off -powerdown 0 ;
				touch -f $LOGDIR/fai.log ;
				/usr/lib/cdebconf/debconf /usr/bin/fai-progress ;
				reset")
	fi

	# Wait for client registration and source the MAC, HOSTNAME and IP variables
	si_available=0
	for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20; do
	        if [ -r /var/run/gosa-si-client.opts ]; then
	                si_available=1
	                break
	        fi
	        sleep 0.5
	done

	# Fallback to old configuration, if we didn't get something
	if [ $si_available = 0 ]; then
		if [ -f /var/backups/gosa-si-client.opts ]; then
			cp /var/backups/gosa-si-client.opts /var/run/gosa-si-client.opts
		else
			do_error_poweroff $"Error: Cannot contact any activation server!" 10 60
		fi
	fi

	# Source client information and generate a backup copy
	. /var/run/gosa-si-client.opts
	[ -w /var/backups/gosa-si-client.opts ] && cp /var/run/gosa-si-client.opts /var/backups/gosa-si-client.opts

	if [ -z "$IPADDRESS" ]; then
	        # check if we have been configured before, then try the offline mode
	        if [ ! -f /etc/sysconfig/Argonaut ]; then
	                do_error_poweroff $"Error: Cannot detect an ip-address for this system!" 10 60
	        fi
	fi

	# Load Argonaut and LDAP configuration
	. /etc/ldap/ldap-shell.conf
	. /etc/argonaut/argonaut-agents.conf

	log_progress_msg "hostname"
	if [[ "$HOSTNAME" = "unknown" ]]; then
	        do_error_poweroff $"Error: Cannot detect a hostname for this system!" 10 60
	fi
	echo $HOSTNAME > /etc/hostname
	hostname $HOSTNAME

	# If we're very slow, wait for the ldap.conf
	wait_ldap_available
	if [ "$LDAP_AVAILABLE" ]; then
	  wait_ldap_available
	fi

	# Check if autosetup is needed at this point
	log_progress_msg "activation"
	if ! terminal_activated $MAC; then
		# Cancel softupdate on non-activated systems
		if [ "softupdate" = "$action" ]; then
			exit 1
		fi

		# wait till we get activated
		echo "goto-activation-start" >> $LOGDIR/fai.log
		while [ ! -f /var/run/gosa-si-client.activated ]; do sleep 0.5; done

    # FusionDirectory writes the GOto entry in three steps. To continue, we check
    # if XDRIVER is present.
    while ! terminal_load_hardware_profile $MAC &> /dev/null; do
      cat "/etc/sysconfig/argonaut" | grep -v 'XDRIVER="unknown"' | grep -q 'XDRIVER'
      sleep 0.5 
    done
    log_progress_msg "config"

		# Activated!
		echo "goto-activation-stop" >> $LOGDIR/fai.log

		# Reboot if we're a thin client, because the NFS-Root will switch in this case
		if terminal_reboot_needed $MAC; then
			log_process_msg "reboot"
			faireboot
			while true; do sleep 1; done
		fi
	fi

	# Wait for LDAP config which may not be available yet
	if ! wait_ldap_available 10; then
		do_error_poweroff $"Error: Cannot contact the LDAP service!" 10 60
	fi

	if terminal_do_softupdate $MAC; then

	  log_progress_msg "update"

	  # Get the new VT and change there
	  if [ $VERBOSE -eq 0 ]; then
	  	NEW_VT_ID=$(echo "$NEW_VT" | sed -n 's/.*tty\([0-9]*\).*/\1/p')
	 	chvt $NEW_VT_ID
	  fi

	  # Runs softupdate
	  fai -N softupdate
	  if [ $VERBOSE -eq 0 ]; then
		# Change back to main VT
		chvt 1
	  fi

	fi

	# Enable splash if it was enabled before
	if [ $VERBOSE -eq 0 ]; then
		setterm -cursor on
	fi

	# Execute modules
	for mod in /etc/argonaut/modules/*; do
		echo $mod | grep -q \.dpkg && continue
		log_progress_msg "$(basename $mod)"
		[ -f "$mod" ] && . $mod 2> /dev/null
	done

	# Load modules
	for module in $(sed -n 's/^MODULES="\([^"]*\)"/\1/gp' /etc/sysconfig/argonaut); do
		modprobe $module > /dev/null
	done

	# End fai-progress
	echo "fai-progress: hangup" >> $LOGDIR/fai.log
}

case "$1" in
  start)
        log_daemon_msg "Starting $DESC"
	start
	log_end_msg $?
	setterm -cursor on
	;;

  stop)
        log_daemon_msg "Stopping $DESC"
	log_end_msg 0
	;;

  restart|force-reload)
        log_daemon_msg "Restarting $DESC"
	log_end_msg 0
	;;

  *)	echo "Usage: /etc/init.d/argonaut-agents {start|stop|restart|force-reload}" >&2
	exit 1;
	;;
esac

exit 0

