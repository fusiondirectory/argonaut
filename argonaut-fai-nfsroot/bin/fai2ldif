#!/usr/bin/perl -w

#######################################################################
#
# fai2ldif
#
# Copyright (c) 2014 The FusionDirectory Project <contact@fusiondirectory.org>
#
# Authors: CÃ´me Bernigaud
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
#######################################################################

use strict;
use warnings;

use 5.008;

use Net::LDAP;
use Getopt::Long;

# used to manage files
use Path::Class;

#~ use Argonaut::Libraries::FAI qw(:flags);

my $dump_dir      = "/var/lib/fai/config";
my $verbose       = 0;
my $base          = '<BASE>';
my $faibaserdn    = 'ou=fai,ou=configs,ou=systems';
my $faipackagerdn = 'ou=packages';

Getopt::Long::Configure ("bundling");

GetOptions( 'v|verbose'         => \$verbose,
            'h|help'            => \&usage,
            'c|config-space=s'  => \$dump_dir,
            'b|base=s'          => \$base )
  or usage( 'Wrong parameters' );

my $class = shift or usage('Missing class parameter');

if (-e "$dump_dir/package_config/$class") {
  my $file = file("$dump_dir/package_config/$class");
  # skip if $file is a directory
  if ( -d $file ) {
    next;
  }

  print "parsing $file\n" if $verbose;

  my $name = $file;
  $name =~ s|^.*/||;


  my @lines = $file->slurp;

  foreach my $line ( @lines ) {
    # remove \n from the end of each line
    $line =~ s/#.*$//;
    chomp $line;

    next if ( $line =~ /^$/ );

    # only process for lines beginning with "class", and extracting the 2nd word (the class name)
    if ( $line =~ /^PACKAGES\s+([^ ]+)(\s+([^ ]*))?/ ) {
      my $cn = $name;
      $cn .= '-'.$3 if $3;
      print "dn: cn=$cn,$faipackagerdn,$faibaserdn,$base\n";
      print "objectClass: FAIpackageList\n";
      print "FAIinstallMethod: $1\n";
      print "cn: $cn\n";
    } else {
      my @packages = split(/\s+/, $line);
      foreach my $package (@packages) {
        print "FAIpackage: $package\n";
      }
    }
  }
}
