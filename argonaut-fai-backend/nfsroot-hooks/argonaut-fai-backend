#!/bin/sh

msg() {
	echo "nfsroot-hooks/fusiondirectory: $1"
}

# Make sysconfig a real directory
if [ ! -d "${NFSROOT}"/etc/sysconfig ]; then
	msg "creating sysconfig directory"
	mkdir -p "${NFSROOT}"/etc/sysconfig
fi

# Copy some templates
for file in /etc/initramfs-tools/initramfs.conf /etc/initramfs-tools/update-initramfs.conf /etc/usplash.conf; do
	name=${file##*/}
	msg "copying $name"
	[ -f "/etc/fai/nfsroot-templates/$name" ] && cp /etc/fai/nfsroot-templates/$name "${NFSROOT}"$file
done

# Copy make-fai-nfsroot.conf to allow debootstrapping later on
cp /etc/fai/make-fai-nfsroot.conf "${NFSROOT}"/etc/fai

#copy argonaut.conf & ldap.conf
msg "Copy argonaut.conf and ldap.conf"
cp /etc/argonaut/argonaut.conf "${NFSROOT}"/etc/argonaut
cp /etc/ldap/ldap.conf "${NFSROOT}"/etc/ldap/ldap.conf

# Set locale if needed
if [ -n "$NFSROOT_LOCALE" ]; then
  echo "set locales/default_environment_locale $NFSROOT_LOCALE" | chroot $NFSROOT debconf-communicate
  echo "set locales/locales_to_be_generated $NFSROOT_LOCALE UTF-8" | chroot $NFSROOT debconf-communicate
  chroot $NFSROOT dpkg-reconfigure -fnoninteractive locales
fi

# Get newest kernel installed inside the nfsroot
version=$(echo $NFSROOT/boot/vmlinuz-* | sort -n | head -n1 | cut -d- -f2-)

# Copy as default kernel
if [ -f "$NFSROOT/boot/vmlinuz-$version" ]; then
	msg "installing vmlinuz-install"
        ln -s "$NFSROOT/boot/vmlinuz-$version" "$TFTPROOT/vmlinuz-install"
else
        msg "ERROR: cannot find kernel to use as vmlinuz-install!!!"
fi

# Copy initrd if present
if [ -f "$NFSROOT/boot/initrd.img-$version" ]; then
	msg "installing initrd.img-install"
	ln -s "$NFSROOT/boot/initrd.img-$version" "$TFTPROOT/initrd.img-install"
fi

