#!/usr/bin/perl

#######################################################################
#
# argonaut-client-fai-get-id -- get deployment queue job id
#
# Copyright (C) 2011 FusionDirectory project <contact@fusiondirectory.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
#######################################################################

use strict;
use warnings;

use 5.008;

use JSON::RPC::Client;
use Config::IniFiles;
use Log::Handler;

use Argonaut::Common qw(:net :ldap :file);

=pod
This program ask the argonaut-server for the assigned taskid for the fai installation.
It store the info into the file specified in the config file.
=cut

my $configfile = "/etc/argonaut/argonaut.conf";
my $logfile = "argonaut-client-fai-getid.log";
my $protocol = "http://";

my $config = Config::IniFiles->new( -file => $configfile, -allowempty => 1, -nocase => 1);

my $server_ip                       =   $config->val( server => "server_ip"          ,"");
my $client_ip                       =   $config->val( client => "client_ip"          ,"");
my $ldap_configfile                 =   $config->val( ldap => "config"                  ,"/etc/ldap/ldap.conf");
my $ldap_dn                         =   $config->val( ldap => "dn"                      ,"");
my $ldap_password                   =   $config->val( ldap => "password"                ,"");

my $client_settings = argonaut_get_client_settings($ldap_configfile,$ldap_dn,$ldap_password,$client_ip);

my $file          = $client_settings->{'taskidfile'};
my $interface     = $client_settings->{'interface'};
my $logdir        = $client_settings->{'logdir'};
my $myMac         = $client_settings->{'mac'};

my $server_settings = argonaut_get_server_settings($ldap_configfile,$ldap_dn,$ldap_password,$server_ip);
  
my $server_port   = $server_settings->{'port'};

argonaut_create_dir($logdir);

my $log = Log::Handler->create_logger("argonaut-client-fai-get-id");

$log->add(
    file => {
        filename => "$logdir/$logfile",
        maxlevel => "debug",
        minlevel => "emergency"
    }
);

my $client = new JSON::RPC::Client;
$client->version('1.0');

my $callobj = {
  method  => "get_my_id",
  params  => [$myMac],
};

my $taskid = $client->call($protocol.$server_ip.":".$server_port, $callobj);

if($taskid) {
  if ($taskid->is_error) {
    print $myMac;
    $log->error("Error : ", $taskid->error_message);
    die "Error : ", $taskid->error_message;
  } else {
      open (ID, ">$file") or die "cannot write in $file";
      print ID $taskid->content->{result};
      close(ID);
  }
} else {
  print $myMac;
  $log->error("Error while trying to contact Argonaut server : ".$client->status_line);
  die "Error while trying to contact Argonaut server : ".$client->status_line;
}

print $myMac;

__END__

# vim:ts=2:sw=2:expandtab:shiftwidth=2:syntax:paste
